{"version":3,"file":"static/js/415.af2c71d7.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/MoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  color: green;\n  list-style: circle;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 8px;\n\n  border-radius: 12px;\n`;\nexport const NavLinkStyled = styled(NavLink)`\n  display: inline-block;\n  padding: 8px;\n  text-decoration: none;\n  color: black;\n  border-radius: 12px;\n\n  :hover {\n    background-color: green;\n    box-shadow: -1px -1px 52px -8px rgba(0, 128, 0, 0.75);\n    -webkit-box-shadow: -1px -1px 52px -8px rgba(0, 128, 0, 0.75);\n    -moz-box-shadow: -1px -1px 52px -8px rgba(0, 128, 0, 0.75);\n\n    font-weight: 700;\n    color: white;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, NavLinkStyled } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, path = '' }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies && (\n        <List>\n          {movies.map(movie => (\n            <Item key={movie.id}>\n              <NavLinkStyled\n                to={`${path}${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.title}\n              </NavLinkStyled>\n            </Item>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  path: PropTypes.string,\n\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.node.isRequired,\n    }).isRequired\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { getMovieList } from 'services/MoviesAPI';\nimport { MovieList } from 'components/MovieList';\nimport { Circles } from 'react-loader-spinner';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n\n  useEffect(() => {\n    setIsloading(true);\n    const abortController = new AbortController();\n\n    const getMovie = async () => {\n      try {\n        setIsloading(true);\n        setError(false);\n        const { results } = await getMovieList(abortController.signal);\n\n        if (!results) {\n          return await Promise.reject(new Error(`\" Not found \"`));\n        }\n        setMovies(results);\n      } catch (error) {\n        // setError(true);\n      } finally {\n        setIsloading(false);\n      }\n    };\n    getMovie();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n\n      {isLoading && (\n        <Circles\n          height=\"300\"\n          width=\"300\"\n          color=\"#4fa94d\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            position: 'fixed',\n            top: '150px',\n            left: '50%',\n            transform: 'translate(-50%)',\n          }}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n\n      {error && (\n        <h2 style={{ color: 'red', fontSize: 20 }}>\n          Oops, mistake! Please try again\n        </h2>\n      )}\n\n      {!error && <MovieList movies={movies} path={'movies/'} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = '6b1b36ecf2f3f3c0d27307e18cbffcb3';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovieList = async signal => {\n  try {\n    const resp = await axios.get('trending/movie/day', {\n      signal,\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovie = async (id, signal) => {\n  try {\n    const resp = await axios.get(`movie/${id}`, {\n      signal,\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getActors = async (id, signal) => {\n  try {\n    const resp = await axios.get(`movie/${id}/credits`, {\n      signal,\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async (id, signal) => {\n  try {\n    const resp = await axios.get(`movie/${id}/reviews`, {\n      signal,\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovies = async (query, signal) => {\n  try {\n    const resp = await axios.get(\n      `\n/search/movie`,\n\n      {\n        signal,\n        params: {\n          api_key: API_KEY,\n          query,\n        },\n      }\n    );\n\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["List","styled","Item","NavLinkStyled","NavLink","MovieList","movies","path","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","error","setError","isLoading","setIsloading","useEffect","abortController","AbortController","getMovie","getMovieList","signal","results","Promise","reject","Error","abort","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","position","top","left","transform","wrapperClass","visible","style","fontSize","API_KEY","axios","params","api_key","resp","data","console","log","getActors","getReviews","getMovies","query"],"sourceRoot":""}